// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: notifications/services.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';
import {
  GetNotificationsRequest,
  GetNotificationsResponse,
} from './messages/get';
import {
  SendNotificationRequest,
  SendNotificationResponse,
} from './messages/send';

export const protobufPackage = 'notifications';

export const NOTIFICATIONS_PACKAGE_NAME = 'notifications';

export interface NotificationServiceClient {
  sendNotification(
    request: SendNotificationRequest
  ): Observable<SendNotificationResponse>;

  getNotifications(
    request: GetNotificationsRequest
  ): Observable<GetNotificationsResponse>;
}

export interface NotificationServiceController {
  sendNotification(
    request: SendNotificationRequest
  ):
    | Promise<SendNotificationResponse>
    | Observable<SendNotificationResponse>
    | SendNotificationResponse;

  getNotifications(
    request: GetNotificationsRequest
  ):
    | Promise<GetNotificationsResponse>
    | Observable<GetNotificationsResponse>
    | GetNotificationsResponse;
}

export function NotificationServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['sendNotification', 'getNotifications'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method
      );
      GrpcMethod('NotificationService', method)(
        constructor.prototype[method],
        method,
        descriptor
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method
      );
      GrpcStreamMethod('NotificationService', method)(
        constructor.prototype[method],
        method,
        descriptor
      );
    }
  };
}

export const NOTIFICATION_SERVICE_NAME = 'NotificationService';
