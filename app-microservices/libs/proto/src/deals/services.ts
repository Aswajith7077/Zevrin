// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.1
// source: deals/services.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';
import { Deal } from './messages/common';
import { GetDealRequest } from './messages/get';
import { ListDealsRequest, ListDealsResponse } from './messages/list';
import { GetDealResponse } from 'types/deals/messages/get';

export const protobufPackage = 'deals';

export const DEALS_PACKAGE_NAME = 'deals';

export interface DealsServiceClient {
  getDeal(request: GetDealRequest): Observable<Deal>;

  listDeals(request: ListDealsRequest): Observable<ListDealsResponse>;
}

export interface DealsServiceController {
  getDeal(
    request: GetDealRequest
  ): Promise<GetDealResponse> | Observable<GetDealResponse> | GetDealResponse;

  listDeals(
    request: ListDealsRequest
  ):
    | Promise<ListDealsResponse>
    | Observable<ListDealsResponse>
    | ListDealsResponse;
}

export function DealsServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['getDeal', 'listDeals'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method
      );
      GrpcMethod('DealsService', method)(
        constructor.prototype[method],
        method,
        descriptor
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method
      );
      GrpcStreamMethod('DealsService', method)(
        constructor.prototype[method],
        method,
        descriptor
      );
    }
  };
}

export const DEALS_SERVICE_NAME = 'DealsService';
